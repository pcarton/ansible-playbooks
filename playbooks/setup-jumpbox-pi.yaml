---
- name: Configure RaspberryPi Jumpbox
  hosts: jumpboxes
  vars:
    apt_packages:
      - bat
      - git
      - neofetch
      - ansible
      - sshpass
      - s3cmd

  roles:
    - hardenSSH
    - authWithGithub
    - checkoutPersonalGithubRepos
    - setSecretValues
    - installOhMyZSH
    - installgpakoszTmuxConf

  tasks:
    - name: Install apt Packages
      become: yes
      apt:
        name: "{{ apt_packages }}"
        state: present
        update_cache: yes
        cache_valid_time: 3600

    - name: Update Cache and Upgrade all Packages
      register: updatesys
      become: yes
      apt:
        name: "*"
        state: latest
        update_cache: yes
        cache_valid_time: 3600
      timeout: 600

    - name: Display the last line of the previous task to check the stats
      debug:
        msg:  "{{updatesys.stdout_lines|last}}"

    - name: Check for existing terraform install
      stat:
        path: /usr/local/bin/terraform
      register: check_terraform

    - name: Get Terraform ARM Binary
      become: yes
      get_url:
        url: https://releases.hashicorp.com/terraform/1.1.2/terraform_1.1.2_linux_arm.zip
        dest: /tmp/terraform_1.1.2_linux_arm.zip
      when: not check_terraform.stat.exists

    - name: Unzip Terraform ARM Binary
      ansible.builtin.unarchive:
        remote_src: yes
        src:  /tmp/terraform_1.1.2_linux_arm.zip
        dest:  /tmp/
      when: not check_terraform.stat.exists

    - name: Move Terraform ARM Binary to path
      ansible.builtin.copy:
        remote_src: yes
        src: /tmp/terraform
        dest: /usr/local/bin/terraform
        owner: pi
        mode: a+x
      become: yes
      when: not check_terraform.stat.exists

    - name: Insert/Update .zshrc File With TMUX at SSH Login
      blockinfile:
        path: /home/pi/.zshrc
        backup: yes
        block: |
          if [[ -n "$PS1" ]] && [[ -z "$TMUX" ]] && [[ -n "$SSH_CONNECTION" ]]; then
            tmux attach-session -t ssh_tmux || tmux new-session -s ssh_tmux
          fi

    - name: Checkout This Playbook On Remote
      ansible.builtin.git:
        repo: 'https://github.com/pcarton/ansible-playbooks.git'
        dest: /home/pi/ansible-playbooks
